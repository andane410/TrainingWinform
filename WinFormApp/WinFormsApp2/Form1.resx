<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bbIAAAAASUVORK5CYII=
</value>
  </data>
</root>